# file: tasks/configure-master.yml -- postgresql pre-start configuration of master server and startup

#- name: "Stage 2: stop old postgresql service"
#  service: name="postgresql" state=stopped
#  sudo_user: postgres
#  shell: "pg_ctl -D {{ pgdata }} stop"
#  when: postgresql_drop_old_cluster

#- name: "Stage 2: remove old postgresql cluster"
#  command: "rm -rf {{ pgdata }} {{ postgresql_cluster_symlink_src }}"
#  when: postgresql_drop_old_cluster

#- name: "Stage 2: cluster directory replacement with symlink, check destination directory"
#  file:
#    path: "{{ postgresql_cluster_symlink_src }}"
#    state: directory
#    owner: "{{ postgresql_admin_user }}"
#    group: "{{ postgresql_admin_user }}"
#    mode: 0700
#  when: postgresql_cluster_symlink_src|length > 0
  
#- name: "Stage 2: cluster directory replacement with symlink, create symlink"
#  file:
#    src: "{{ postgresql_cluster_symlink_src }}"
#    dest: "/var/lib/postgresql/{{ postgresql_version }}/main"
#    state: link
#    owner: "{{ postgresql_admin_user }}"
#    group: "{{ postgresql_admin_user }}"
#  when: postgresql_cluster_symlink_src|length > 0

#- name: "Stage 2: initialize new postgresql cluster"
#  sudo: yes
#  sudo_user: "{{ postgresql_admin_user }}"
#  command: "initdb -D {{ pgdata }}"

- name: "Stage 2: configure pg_hba.conf"
  template:
    src: pg_hba.conf.j2
    dest: "{{ config_dir }}/pg_hba.conf"
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
#    mode: 0640

#- name: "Stage 2: postgresql.conf permissions"
#  template:
#    src: ../../../templates/postgresql.conf.j2
#    dest: "{{ config_dir }}/postgresql.conf"
#    owner: "{{ postgresql_admin_user }}"
#    group: "{{ postgresql_admin_user }}"
#    mode: 0640
    # state: present

- name: "Stage 3: configure postgresql.conf"
  lineinfile:
    dest: "{{ config_dir }}/postgresql.conf"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.guc }}"
  with_items: postgresql_conf_default_guc

- name: "Stage 2: create postgresql log directory"
  file:
    path: "{{ postgresql_log_directory }}"
    state: directory
    owner: "{{ postgresql_admin_user }}"
    group: "{{ postgresql_admin_user }}"
    mode: 0755
  when: postgresql_log_directory is defined

- name: "Stage 2: restart postgresql service"
  service: name="postgresql" state=restarted enabled=yes
#  when: restart_master

- name: "Install python-psycopg2"
  apt: name=python-psycopg2 state=present

#- name: "Reloading postgres configuration file after install"
#  sudo_user: postgres
#  shell: psql -c "select pg_reload_conf()"
